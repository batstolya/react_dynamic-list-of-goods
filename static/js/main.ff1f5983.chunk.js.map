{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","memo","goods","loading","Loader","active","inline","size","map","good","List","Item","style","color","fontSize","name","id","getAll","fetch","then","response","json","App","useState","setGoods","setLoading","handlerGetGoods","promise","a","myGoods","className","Card","Content","extra","textAlign","Button","Group","vertical","widths","type","onClick","sort","b","localeCompare","slice","filter","length","ReactDOM","render","document","getElementById"],"mappings":"yQASaA,EAA6BC,gBAAK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OAC7C,6BACGA,EACC,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,QAAM,EAACC,KAAK,SAA3B,qBAIAL,EAAMM,KAAI,SAACC,GAAD,OACR,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAKI,OAASC,SAAU,QAH7C,SAKGL,EAAKM,MAJDN,EAAKO,OAHLP,EAAKO,Y,OCZjB,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICEMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KAEMC,EAAe,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEpBH,GAAW,GAFS,SAGEE,EAHF,OAGdE,EAHc,OAKpBL,EAASK,GACTJ,GAAW,GANS,gDAQpBA,GAAW,GARS,yDAAH,sDAYrB,OACE,qBAAKK,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,QAAN,UACE,yDAGF,cAACD,EAAA,EAAKC,QAAN,CAAcC,OAAK,EAACC,UAAU,SAA9B,SACE,eAACC,EAAA,EAAOC,MAAR,CAAcC,UAAQ,EAACC,OAAO,IAA9B,UACE,cAACH,EAAA,EAAD,CACEI,KAAK,SACL,UAAQ,aACR1B,MAAM,QACN2B,QAAS,kBAAMd,EAAgBT,MAJjC,4BASA,cAACkB,EAAA,EAAD,CACEI,KAAK,SACL,UAAQ,oBACR1B,MAAM,OACN2B,QAAS,kBAAMd,EDvCpBT,IACJE,MAAK,SAAAjB,GAAK,OAAIA,EACZuC,MAAK,SAACb,EAAGc,GAAJ,OAAUd,EAAEb,KAAK4B,cAAcD,EAAE3B,SACtC6B,MAAM,EAAG,QCgCJ,gCASA,cAACT,EAAA,EAAD,CACEI,KAAK,SACL,UAAQ,aACR1B,MAAM,MACN2B,QAAS,kBAAMd,EDzCpBT,IACJE,MAAK,SAAAjB,GAAK,OAAIA,EAAM2C,QAAO,SAAApC,GAAI,MAAmB,QAAfA,EAAKI,cCoCjC,iCAUJ,cAACkB,EAAA,EAAKC,QAAN,UACI9B,EAAM4C,OAGN,cAAC9C,EAAD,CAAWE,MAAOA,EAAOC,QAASA,IAFlC,mBAAGS,MAAO,CAAEsB,UAAW,UAAvB,6CChEZa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.ff1f5983.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Loader, List } from 'semantic-ui-react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[];\n  loading: boolean;\n};\n\nexport const GoodsList: React.FC<Props> = memo(({ goods, loading }) => (\n  <ul>\n    {loading ? (\n      <Loader active inline size=\"medium\">\n        Loading\n      </Loader>\n    ) : (\n      goods.map((good) => (\n        <List key={good.id}>\n          <List.Item>\n            <li\n              key={good.id}\n              data-cy=\"good\"\n              style={{ color: `${good.color}`, fontSize: '20px' }}\n            >\n              {good.name}\n            </li>\n          </List.Item>\n        </List>\n      ))\n    )}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Button, Card } from 'semantic-ui-react';\n\nimport { GoodsList } from './GoodsList';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from \"./api/goods\";\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handlerGetGoods = async (promise: Promise<Good[]>) => {\n    try {\n      setLoading(true);\n      const myGoods = await promise;\n\n      setGoods(myGoods);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <Card.Content>\n          <h1>Dynamic list of Goods</h1>\n        </Card.Content>\n\n        <Card.Content extra textAlign=\"center\">\n          <Button.Group vertical widths=\"3\">\n            <Button\n              type=\"button\"\n              data-cy=\"all-button\"\n              color=\"green\"\n              onClick={() => handlerGetGoods(getAll())}\n            >\n              Load all goods\n            </Button>\n\n            <Button\n              type=\"button\"\n              data-cy=\"first-five-button\"\n              color=\"teal\"\n              onClick={() => handlerGetGoods(get5First())}\n            >\n              Load 5 first goods\n            </Button>\n\n            <Button\n              type=\"button\"\n              data-cy=\"red-button\"\n              color=\"red\"\n              onClick={() => handlerGetGoods(getRedGoods())}\n            >\n              Load red goods\n            </Button>\n          </Button.Group>\n        </Card.Content>\n        <Card.Content>\n          {!goods.length ? (\n            <p style={{ textAlign: 'center' }}>please press the button</p>\n          ) : (\n            <GoodsList goods={goods} loading={loading} />\n          )}\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}